receivers:
  otlp:
    protocols:
      grpc:
        endpoint: :4317
  # The hostmetrics receiver is required to get correct infrastructure metrics in Datadog.
  #hostmetrics:
  #  collection_interval: 10s
  #  scrapers:
  #    paging:
  #      metrics:
  #        system.paging.utilization:
  #          enabled: true
  #    cpu:
  #      metrics:
  #        system.cpu.utilization:
  #          enabled: true
  #    disk:
  #    filesystem:
  #      metrics:
  #        system.filesystem.utilization:
  #          enabled: true
  #    load:
  #    memory:
  #    network:
  #    processes:
  ## The prometheus receiver scrapes metrics needed for the OpenTelemetry Collector Dashboard.
  #prometheus:
  #  config:
  #    scrape_configs:
  #      - job_name: "otelcol"
  #        scrape_interval: 10s
  #        static_configs:
  #          - targets: ["0.0.0.0:8888"]

  #filelog:
  #  include_file_path: true
  #  poll_interval: 500ms
  #  include:
  #    - /var/log/**/*example*/*.log

processors:
  batch:
    send_batch_max_size: 100
    send_batch_size: 10
    timeout: 10s

connectors:
  datadog/connector:

exporters:
  debug:
  datadog/exporter:
    api:
      site: us3.datadoghq.com
      key: ${env:DD_API_KEY}
  otlp/openobserve:
    endpoint: local-openobserve:5081
    headers:
      Authorization: "Basic cm9vdEBleGFtcGxlLmNvbTpQdTRiWVVod3prdUZSSUx1"
      organization: default
      stream-name: default
    tls:
      insecure: true

service:
  pipelines:
    metrics:
      receivers: [otlp, datadog/connector]
      processors: [batch]
      exporters: [debug, otlp/openobserve, datadog/exporter]
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [debug, otlp/openobserve, datadog/connector, datadog/exporter]

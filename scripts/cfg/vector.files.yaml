api:
  enabled: true

sources:
  in:
    # if you wanna get from files
    type: file
    include:
      - /tmp/logs/*.log
    line_delimiter: "\n"
    max_line_bytes: 102400
    max_read_bytes: 2048
    read_from: beginning

# add fields that various observability platforms like
transforms:
  dd_transform:
    type: remap
    inputs:
      - in
    source: |-
      message_attrs, err = parse_json(.message)
      log(message_attrs)
      if err == null {
        .message = message_attrs.event
        .span_id = message_attrs.span.span_id
        .trace_id = message_attrs.span.trace_id
        .parent_span_id = message_attrs.span.parent_span_id
        .dd.trace_id = message_attrs.span.trace_id
        .dd.span_id = message_attrs.span.span_id
        .deployment_environment = message_attrs.deployment_environment
        .service_name = message_attrs.service_name
        .service_version = message_attrs.service_version
        .host_name = message_attrs.host_name
      } else {
        log(err, level: "error")
      }

sinks:
  out:
    inputs:
      - "dd_transform"
    type: "console"
    encoding:
      codec: "json"

  # test DD sink
  sink_dd:
    type: datadog_logs
    inputs:
      - "dd_transform"
    compression: gzip
    site: us3.datadoghq.com
    default_api_key: "$DD_API_KEY"

  openobserve:
    type: "http"
    inputs:
      - "dd_transform"
    uri: "http://local-openobserve:5080/api/default/default/_json"
    method: "post"
    auth:
      strategy: "basic"
      user: "$OPENOBSERVE_AUTH_USER"
      password: "$OPENOBSERVE_AUTH_PASS"
    compression: "gzip"
    encoding:
      codec: "json"
      timestamp_format: "rfc3339"
    healthcheck:
      enabled: false
